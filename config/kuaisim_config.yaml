# config/kuaisim_config.yaml - 基于官方源码的配置
kuaisim:
  # === KuaiSim源码路径配置 ===
  kuaisim_path: "KRLBenchmark/code"  # 设置为KuaiSim源码根目录路径，例如: "/path/to/KRLBenchmark/code"

  # === 数据配置 ===
  data_path: "dataset/Kuairand-Pure/"
  train_file: "log_session_4_08_to_5_08_Pure.csv"
  user_meta_file: "user_features_Pure_fillna.csv"
  item_meta_file: "video_features_basic_Pure_fillna.csv"

  # === 预训练模型路径 ===
  # 指向训练好的用户响应模型日志文件
  model_log_path: "output/Kuairand_Pure/env/log/user_KRMBUserResponse_lr0.0001_reg0.01_nlayer2.model.log"

  # === 环境参数 ===
  num_products: 50          # 产品数量
  cardinality: 6            # slate_size，每次推荐的物品数量
  max_episodes: 100         # 最大训练轮数
  max_steps: 20             # 每个episode的最大步数

  # === KuaiSim模型参数 ===
  max_hist_seq_len: 100     # 用户历史序列最大长度
  user_latent_dim: 32       # 用户潜在维度
  item_latent_dim: 32       # 物品潜在维度
  enc_dim: 64              # 编码维度
  n_ensemble: 2            # 集成数量
  attn_n_head: 4           # 注意力头数
  transformer_d_forward: 64 # Transformer前馈维度
  transformer_n_layer: 2   # Transformer层数
  state_hidden_dims: [128] # 状态隐藏维度
  scorer_hidden_dims: [128, 32] # 评分器隐藏维度
  dropout_rate: 0.1        # Dropout率
  l2_coef: 0.01           # L2正则化系数

  # === 运行时配置 ===
  device: "cuda"           # 使用的设备
  episode_batch_size: 32   # Episode批次大小
  item_correlation: 0.2    # 物品相关性

# === LLM配置 ===
llm:
  model: "gpt-4o-mini"
  temperature: 0.7
  samples_per_iteration: 2
  max_iterations: 2
  api_key: "sk-eM1CKOeVcmjqjIA7jZiRyMDXq1PwQo5i9Vi08njyxEicKcPt"
  base_url: "https://api.chatanywhere.tech/v1"
  max_retries: 3
  timeout: 30
  retry_delay: 2
  enable_fallback: true

# === 训练配置 ===
training:
  num_iterations: 2
  episodes_per_sample: 50
  batch_size: 32
  update_frequency: 10

# === 智能体配置 ===
agent:
  algorithm: "A2C"
  hidden_dim: 256
  learning_rate: 0.001
  discount_factor: 0.99
  entropy_weight: 0.01

# === 评估配置 ===
evaluation:
  num_episodes: 30
  render: false
  save_frequency: 10

# === 任务描述 ===
task:
  description: |
    基于KuaiSim用户行为模拟器优化视频推荐策略，目标是最大化用户参与度和长期留存。
    考虑因素：
    1. 用户的历史行为序列和偏好演化
    2. 视频内容的多样性和质量
    3. 推荐列表的长度限制（slate_size）
    4. 长期用户满意度与短期点击率的平衡
    5. 用户状态转移和会话级别的优化

# === 调试配置 ===
debug:
  log_level: "INFO"
  test_api_on_startup: true
  use_fallback_on_failure: true
  save_generated_functions: true